{"version":3,"sources":["./src/app/auth/auth-routing.module.ts","./src/app/auth/signup/signup.component.ts","./src/app/auth/signup/signup.component.html","./src/app/auth/auth.module.ts","./src/app/auth/login/login.component.ts","./src/app/auth/login/login.component.html"],"names":[],"mappings":"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","file":"auth-auth-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { SignupComponent } from './signup/signup.component';\r\n\r\nconst routes: Routes = [\r\n  {path: 'login', component: LoginComponent},\r\n  {path: 'signup', component: SignupComponent}\r\n];\r\n\r\n@NgModule({\r\nimports: [\r\n  RouterModule.forChild(routes)\r\n],\r\nexports: [RouterModule]\r\n})\r\nexport class AuthRoutingModule{}\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { Subscription } from 'rxjs';\r\nimport { AuthService } from '../auth.service';\r\n\r\n@Component({\r\n  templateUrl: './signup.component.html',\r\n  styleUrls: ['./signup.component.css']\r\n})\r\nexport class SignupComponent implements OnInit, OnDestroy{\r\n  isLoading = false;\r\n  private authStatusSub: Subscription;\r\n\r\n  constructor(public authService: AuthService){}\r\n\r\n  ngOnInit(){\r\n    this.authStatusSub = this.authService.getAuthStatusListener()\r\n    .subscribe(\r\n      authStatus => {\r\n        this.isLoading = false;\r\n      }\r\n    );\r\n  }\r\n\r\n  onSignup(form: NgForm){\r\n    if (form.invalid){\r\n      return;\r\n    }\r\n    //this.isLoading = true;\r\n    this.authService.createUser(form.value.email, form.value.password);\r\n  }\r\n\r\n  ngOnDestroy(){\r\n    this.authStatusSub.unsubscribe();\r\n  }\r\n}\r\n","<body>\n<mat-card>\n  <mat-spinner *ngIf=\"isLoading\"></mat-spinner>\n  <div id=\"circle\">\n    Please sign up and get started!\n  </div>\n  <form (submit)=\"onSignup(signupForm)\" #signupForm=\"ngForm\" *ngIf=\"!isLoading\">\n    <div id=\"reminder\" style=\"display: flex; margin-left: 9vw; font-size: 1.5vw;\">\n      <div style=\"color: #707070;\">Already a member?</div>\n      <div style=\"color: #1AC3C3; margin-left: 1vw;\" routerLink=\"/auth/login\">Log In!</div>\n    </div>\n    <div class=\"input_container\">\n      <input matInput name=\"email\" ngModel type=\"email\" placeholder=\"E-Mail*\" #emailInput=\"ngModel\" required email>\n      <mat-error *ngIf=\"emailInput.invalid\">Please enter a valid email.</mat-error>\n    </div>\n\n    <div class=\"input_container\">\n      <input type=\"password\" name=\"password\" ngModel matInput placeholder=\"Password*\" #passwordInput=\"ngModel\" required>\n      <mat-error *ngIf=\"passwordInput.invalid\">Please enter a valid password.</mat-error>\n    </div>\n    <button mat-raised-button type=\"submit\" *ngIf=\"!isLoading\">Signup</button>\n  </form>\n</mat-card>\n<div id=\"div_container\">\n\n  <div id=\"div_container1\">\n    <img id=\"img2\" src=\"images/Logo.jpg\">\n  </div>\n\n  <div id=\"div_container2\">\n    <div id=\"div_container2_1\">Copyright 2020. All Rights Reserved.</div>\n  </div>\n\n  <div id=\"div_container3\">\n  </div>\n\n</div>\n</body>\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { RouterModule } from '@angular/router';\r\n\r\nimport { AngularMaterialModule } from '../angular-material.module';\r\nimport { AuthRoutingModule } from './auth-routing.module';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { SignupComponent } from './signup/signup.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    LoginComponent,\r\n    SignupComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule,\r\n    FormsModule,\r\n    AuthRoutingModule,\r\n    AngularMaterialModule\r\n  ]\r\n})\r\nexport class AuthModule{\r\n\r\n}\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { Subscription } from 'rxjs';\r\nimport { AuthService } from '../auth.service';\r\n\r\n@Component({\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css'],\r\n})\r\nexport class LoginComponent implements OnInit, OnDestroy{\r\n  isLoading = false;\r\n\r\n  private authStatusSub: Subscription;\r\n\r\n  constructor(public authService: AuthService){}\r\n\r\n  ngOnInit(){\r\n    this.authStatusSub = this.authService.getAuthStatusListener()\r\n    .subscribe(\r\n      authStatus => {\r\n        this.isLoading = false;\r\n      }\r\n    );\r\n  }\r\n\r\n  onLogin(form: NgForm) {\r\n    if(form.invalid){\r\n      return;\r\n    }\r\n    //this.isLoading = true;\r\n    this.authService.login(form.value.email, form.value.password);\r\n  }\r\n\r\n  ngOnDestroy(){\r\n    this.authStatusSub.unsubscribe();\r\n  }\r\n}\r\n","<body>\n\n\n<mat-card>\n  <mat-spinner *ngIf=\"isLoading\"></mat-spinner>\n  <div id=\"circle\">\n    Please login and follow the guide!\n  </div>\n  <form (submit)=\"onLogin(loginForm)\" #loginForm=\"ngForm\" *ngIf=\"!isLoading\">\n    <div id=\"reminder\" style=\"display: flex; margin-left: 9vw; font-size: 1.5vw;\">\n      <div style=\"color: #707070;\">New to this site?</div>\n      <div style=\"color: #1AC3C3; margin-left: 1vw;\" routerLink=\"/auth/signup\">Sign up!</div>\n    </div>\n    <div class=\"input_container\">\n        <input matInput name=\"email\" ngModel type=\"email\" placeholder=\"E-Mail\" #emailInput=\"ngModel\" required email> <br/>\n        <mat-error *ngIf=\"emailInput.invalid\">Please enter a valid email.</mat-error>\n    </div>\n    <div class=\"input_container\">\n        <input type=\"password\" name=\"password\" ngModel matInput placeholder=\"Password*\" #passwordInput=\"ngModel\" required> <br/>\n        <mat-error *ngIf=\"passwordInput.invalid\">Please enter a valid password.</mat-error>\n    </div>\n    <button mat-raised-button type=\"submit\" *ngIf=\"!isLoading\">Login</button>\n  </form>\n\n</mat-card>\n<div id=\"div_container\">\n\n  <div id=\"div_container1\">\n    <img id=\"img2\" src=\"images/Logo.jpg\">\n  </div>\n\n  <div id=\"div_container2\">\n    <div id=\"div_container2_1\">Copyright 2020. All Rights Reserved.</div>\n  </div>\n\n  <div id=\"div_container3\">\n  </div>\n\n</div>\n</body>\n"],"sourceRoot":"webpack:///"}